<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[可乐复制问题]]></title>
    <url>%2F2018%2F07%2F23%2F%E5%8F%AF%E4%B9%90%E5%A4%8D%E5%88%B6%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[问题描述&emsp;&emsp;自动售货机里有N瓶复制可乐.复制可乐非常神奇，喝了它的人会复制出一个自己来！&emsp;&emsp;现在有Alice,Bob,Cathy,Dave四个人在排队买复制可乐。买完的人会马上喝掉，然后他和他的副本会重新去队伍的最后面排队买可乐。&emsp;&emsp;问：最后一个买到复制可乐的人叫什么名字？ 输入描述输入仅有一行，包含一个正整数N； #输出描述输出喝到最后一罐复制可乐的人的名字 示例输入8 输出Bob 问题分析&emsp;&emsp;我们以1,2,3,4分别代表四个名字，那么他们的排列分别是： 序列 序列长度 单个数字重复次数 1 2 3 4 4 1 1 1 2 2 3 3 4 4 8 2 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 16 3 我们可以看出，归纳总结可以知道，第i轮之后，第i轮的序列长度为第i轮的每个数字重复频率为思路是，我们首先要确定输入的数字N在第i轮的范围内，然后再根据在这一轮每个数字的重复频率来确定最后N输入那个数字，也就是最后哪个人处于最后 代码1234567891011121314151617181920212223242526272829303132333435363738394041#include&lt;iostream&gt;#include&lt;cmath&gt;int main()&#123; using namespace std; long n; cin &gt;&gt; n; if (n &lt;= 4) &#123; if (1 == n) cout &lt;&lt; "Alice" &lt;&lt; endl; else if (2 == n) cout &lt;&lt; "Bob" &lt;&lt; endl; else if (3 == n) cout &lt;&lt; "Cathy" &lt;&lt; endl; else if (4 == n) cout &lt;&lt; "Dave" &lt;&lt; endl; return 0; &#125; long num=0; long i = 1; for (; i &lt; n; i++) &#123; if (n &gt; (num + 4 * pow(2, i - 1))) num += 4 * pow(2, i - 1); else break; &#125; if (n-num&lt;=pow(2,i-1)) cout &lt;&lt; "Alice" &lt;&lt; endl; else if (n - num&lt;=2*pow(2, i - 1)) cout &lt;&lt; "Bob" &lt;&lt; endl; else if (n - num&lt;=3*pow(2, i - 1)) cout &lt;&lt; "Cathy" &lt;&lt; endl; else if(n-num&lt;=4*pow(2,i-1)) cout &lt;&lt; "Dave" &lt;&lt; endl; return 0;&#125; 总结本来这个题还有一种最笨的解法，就是直接建立一个长度为N的数组，然后把数字一个一个填进去，然后判断最后是第几个人，但是这种方法，当N很大的时候，会占用很多内存，所以放弃了。]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo-next博客添加评论功能]]></title>
    <url>%2F2018%2F07%2F20%2Fhexo-next%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD%2F</url>
    <content type="text"><![CDATA[添加博客功能&emsp;&emsp;今天我又更新了，本来想加载gitalk博客评论的，结果加载的过程中出错，在解决问题的过程中，发现了一个更好的，这就是极简的valine，这个真的是美爆了，果断放弃gitalk，换成valine，下面是我的添加过程，希望对大家有帮助。&emsp;&emsp;我参考了下面的这篇博客，大家照着来就行了。为什么我不再写一篇呢？因为我的图片上传功能还没修好，贼难受，就先这样记录，等我下午中期答辩结束再去找问题。]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo-next博客添加在线联系功能]]></title>
    <url>%2F2018%2F07%2F18%2Fhexo-next%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E5%9C%A8%E7%BA%BF%E8%81%94%E7%B3%BB%E5%8A%9F%E8%83%BD%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;前面按照别人的方法，看到添加在线联系功能都需要收钱，这两天又开始折腾博客，发现了一个免费的，大家可以看着试试，具体的方法别人的博客说的很清楚，我就不赘述了，参考这位大佬的博客就行了&emsp;&emsp;明天开始要去忙中期了，今天折腾博客，发现了很多没解决的问题，先列出来，以后慢慢解决。 已经解决的问题：这次无意中解决了文章下面版权信息显示不出来的问题，解决的思路很简单，在主题配置文件中，修改如下代码：1234post_copyright: enable: true license: CC BY-NC-SA 3.0 license_url: https://creativecommons.org/licenses/by-nc-sa/3.0/ 待解决的问题：1、本地图片加载不出来；2、图片放大之后按照fancybox显示；3、gitalk评论功能不能初始化，也不能登录。]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[观看“我不是药神”有感]]></title>
    <url>%2F2018%2F07%2F17%2F%E8%A7%82%E7%9C%8B%E2%80%9C%E6%88%91%E4%B8%8D%E6%98%AF%E8%8D%AF%E7%A5%9E%E2%80%9D%E6%9C%89%E6%84%9F%2F</url>
    <content type="text"><![CDATA[我不是药神&emsp;&emsp;上周末终于得空，去看“我不是药神”，感慨良多。&emsp;&emsp;我们生活在这个社会，有些人说好，有些人说这个社会不好，各有各的理由，就像那些白血病人，或许对他们来说，这个社会真的不怎么好，然而对于我们这些健康人，像我这样，还能去看个电影，在博客上感慨的人，生活确实很幸福吧，我想这点是不可辩驳的。&emsp;&emsp;站在痛苦之外，再去看那些痛苦，更多的都是无病呻吟，但有些话还是要说的。陈勇，也就是主人公，很平凡的一个人，买保健品的，妻子离异，儿子要被要走，父亲瘫痪在床，还经常打媳妇，说实话，这种人（或许我不应该给人打上标签）在现实生活中，我是绝对看不起的，但是却做出了故事中的壮举。或许一开始，只是为了私利，为了自己平安，把药品渠道买个那个无良奸商，结果呢，好友惨死，或许他是该为这件事负责的，也或许不该，凭什么要为了别人的生死，搭上自己的生活。做出那样的决定，无可厚非，表示理解，换做我来，估计也是一样的。&emsp;&emsp;后来，好友惨死，再去看那些白血病人，我想，每一个内心有良知的人，都会知道该怎么做。&emsp;&emsp;结果便是：犯法，被抓。&emsp;&emsp;我们再一次开始思考，是法大于情，还是情大于法，或许我们的文化中，更加倾向于后者，毕竟我们的两千年封建社会是人治，孔老夫子说的以人治国，但是，今天，这个法治的社会，法大于情，谁对谁错，说不清，我们今天说情大于法，会不会明天也有人这么做，故意犯法呢，没有绝对完美的制度。&emsp;&emsp;再回过头，那种药，那么贵，为什么没有纳入医保体系，我们的政府人员在做什么？不作为，很多官员的不作为，在我求职的今天，提起政府部门，大家更多的想到的是安逸，养老，这样的字眼，真的适合我们的政府么？回头再说陈勇，在法庭上的那一番话，真的很到位，改变了我对他的看法，很有担当。&emsp;&emsp;我虽然犯了法，我认罪，该怎么判我都认，但是这件事我不后悔，如果再来一次，我依旧这样做。这就是担当。&emsp;&emsp;加油~]]></content>
      <categories>
        <category>静乐志</category>
      </categories>
      <tags>
        <tag>静乐志</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GitHub上搭建自己的hexo+next博客]]></title>
    <url>%2F2018%2F07%2F11%2FGitHub%E4%B8%8A%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hexo-next%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[半年前开始玩博客，当时是在博客园上写的，说真的，体验还挺好，但是，界面不怎么友好，找了半天都没找到自己喜欢的主题，所以当时很郁闷的，也就忍了，后来搜学习的东西，看到了GitHub上别人的博客，那种简约风格正是自己喜欢的，当时完全懵逼，都不知道别人怎么弄得，后来就在百度上找，慢慢入坑，最近才找到时间自己搭一个，算是个开端。说实话，博客，就是码农装逼的起点。让我们开始在装逼的道路上飞起吧。 怎么开始 我是完全从零开始的，按照别人博客一步一步来的，现在将我的坑以及参考的博文告诉大家，可以少走很多弯路 安装Git和node.js 这个步骤可以参考这篇博文，按照步骤往下做，这篇博文有个错误的地方，我在我的博客园博文里面指出来了，可以参考一下 安装hexo和next主题 这个步骤依旧可以参考上面的博文 next的主题优化 主题的优化，我参考了博文，这篇博文中我参考了设置主菜单的部分，其他的基本步骤没错，这篇博文基本就是next主题设置的牛逼版本了，基本网上能找到的设置在这都有了，我设置的都是好的，如果你的存在问题，仔细看下这篇博文的步骤，版本不大变的话，应该没问题，关于设置打赏功能，可以参考这篇博文可以说是很难得了，连怎么申请二维码都有了。 注意事项 1、国内的域名购买之后，记得一定要实名制，否则解析无效 2、域名解析之后，会有个解析时间，也就是在填解析域名的时候的TTL，修改解析之后，需要等待一段时间，解析才可以生效。]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
</search>
