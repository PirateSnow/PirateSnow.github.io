<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Ubuntu下启用root用户]]></title>
    <url>%2F2018%2F08%2F11%2FUbuntu%E4%B8%8B%E5%90%AF%E7%94%A8root%E7%94%A8%E6%88%B7%2F</url>
    <content type="text"><![CDATA[背景以前刚开始接触Linux，用的是发行版Ubuntu，但是Ubuntu有个很坑爹的问题，那就是没有root用户，你去设置里面添加，死活都不行，试了很多方法，包括修改/etc/passwd下的UID等方法，但是都很麻烦，无意中翻到一个帖子，才找到一个好用的方法，赶紧记录下来，不然又忘记了 方法步骤首先，在终端输入下面命令1sudo passwd -u root 响应如下接下来，在终端输入如下命令：1sudo passwd root 响应如下输入你要设置的密码，不过要注意的是，Linux下你在输入密码的时候，他是不会显示出来的，所以放心大胆的往进去输入就可以了，再次确认接下来，你确认设置root密码是否成功首次输入如下命令，切换到root用户1su root 这是个切换用户命令，如果输入root密码后，你的终端输入由美元符号$变成井号#那就说明你已经切换到root用户了效果如下 后记完美完成，当然还有其他方法暂时拥有root权限，在这里就先不讨论了，Linux真的是个迷，小技巧太多，以后慢慢学习]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在vmware下安装Ubuntu16.04]]></title>
    <url>%2F2018%2F08%2F11%2F%E5%9C%A8vmware%E4%B8%8B%E5%AE%89%E8%A3%85Ubuntu16-04%2F</url>
    <content type="text"><![CDATA[背景最近在写一台高并发服务器的程序，所以需要两台电脑都运行相应的程序，一台电脑即当客户端，又当服务器时，在用webbench进行压力测试的时候，会出现问题，所以需要在另外一台电脑上也安装虚拟机 步骤具体的步骤不多说，网上很多博客写的都很好，我就是按照那些步骤来的，唯一可能没指出的地方就是在虚拟机上安装系统的时候，因为分辨率的问题，安装步骤的有些地方会显示不全，所以，在安装之前一定记得要把调整好分辨率，使之全屏，这样再开始。 参考VMware Workstation上安装Ubuntu 16.04 Desktop操作系统]]></content>
      <categories>
        <category>实用操作</category>
      </categories>
      <tags>
        <tag>实用操作</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git常用命令总结]]></title>
    <url>%2F2018%2F08%2F03%2Fgit%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[写在前面首先推荐一篇ProGit学习指南，讲的非常明白，而且字数少，很实用，之前看了看那个什么Git权威指南，还有配套的视频，说实话，不推荐大家去学习，这个非常好。推荐给大家 常用命令git init—-初始化git，每次新建一个项目之后，我们都必须在对应的项目文件夹内执行该命令git add 文件名/目录—–添加修改过的文件或者目录到本地仓库静态暂存区git status —-查看当前暂存区状态，是否有需要提交的文件git commit -m”备注”—–将暂存区的文件提交到本地仓库git clone —-将远程仓库的内容克隆到本地，然后就可以在本地进行开发了git rm —-移除文件，从工作目录中删除文件，这样就不会出现在未跟踪文件清单中了git log —–查看提交历史，会列出所有的更新git log -p -2—-其中-p参数表示显示每次提交的内容差异，-2表示显示最近的两次更新git log –pretty=oneline —-相当于简约的显示模式git commit –amend —–撤销刚才最新的提交git reset HEAD 文件名 ——将提交到暂存区的文件撤销回来git checkout – —–撤销刚才对文件的修改 git remote -v ——-查看当前的远程库git remote add ——添加远程库git fetch [remote-name] —–从远程库抓取数据git push [remote-name] [branch-name] ——-将本地仓库branch分支推送到远程库git remote show [remote-name] ——-查看远程库的信息git remote rm [remote-name] —–删除远程库git remote rename [old-remote-name] [new-remote-name]——修改远程库名字 git tag—-显示目前工作目录中所有的标签git tag -a -m”备注” —–其中-a参数表示标签名字，-m后跟备注信息git tag —–打上轻量级标签 git checkout [branch-name]—–切换到指定分支git checkout -b [branch-name]——新建该分支并切换到该分支git merge [branch-name] ———合并该分支到当前分支git branch -d [branch-name] —–删除该分支git branch ——显示当前工作目录中的所有分支git branch–merged——查看那些分支已经被并入当前分支git branch –no-merged——-查看那些尚未合并的分支git rebase [branch-name]——-衍合分支 git stash—-储藏当前工作状态git stash list —–查看储藏列表git stash apply stash@{2} —-切换到储藏2继续工作git stach pop —–取消当前储藏]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在GitHub上发起程序员面试专业问题集锦的项目]]></title>
    <url>%2F2018%2F08%2F03%2F%E5%9C%A8GitHub%E4%B8%8A%E5%8F%91%E8%B5%B7%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E4%B8%93%E4%B8%9A%E9%97%AE%E9%A2%98%E9%9B%86%E9%94%A6%E7%9A%84%E9%A1%B9%E7%9B%AE%2F</url>
    <content type="text"><![CDATA[背景最近在学习Git，后面可能会写一篇关于Git学习的博客，这篇主要讲发起项目的过程。最近在找工作，正好也在学Git，就想着把前辈们总结下来的面试问题分享给大家，最后想到了直接在GitHub上发起项目的方法，这样时间久，而且不用担心那天总结的文档忽然不见了，所以就有了这个想法，学完Git，开始着手实践，下面是一些过程。 过程第一步：在GitHub上新建仓库，这个很简单，不多说第二步：在本机上新建一个文件夹，用于存储本地的代码第三步：在git bash下进入上一步新建的文件夹第四步：使用git clone Git@github.com/PirateSnow/TechInterExpe.git命令把远程仓库的代码克隆到本地文件夹第五步：执行git init命令，执行之后，可以看到，在本地文件夹，多了一个.git文件夹，说明初始化成功第六步：现在可以对项目文件进行修改了，我的项目目前还是空的，只有一个README.md文件，所以我新建专业面试问题.md文件，以后所有的专业面试问题都会在这上面更新第七步：使用git add 专业面试问题.md命令添加到静态暂存区第八步：使用git commit -m”备注信息” 提交到本地代码库第九步：使用git push origin master命令提交到远程代码库这一步如果提示你使用https://github.com/PirateSnow/TechInterExpe进行push，那么执行下面的步骤（1）git remote add temp1 https://github.com/PirateSnow/TechInterExpe进行push（2）git remote rm origin（3）git remote rename temp1 origin这样就可以了，有什么问题欢迎大家咨询 后记现在只是把基本框架搭起来，以后按照这个步骤更新就可以了，欢迎大家参与共享]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[浦发银行面试经历]]></title>
    <url>%2F2018%2F08%2F01%2F%E6%B5%A6%E5%8F%91%E9%93%B6%E8%A1%8C%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86%2F</url>
    <content type="text"><![CDATA[写在前面今天去参加了浦发银行的面试，啊~累死了，从中午一点开始面试，一直到下午六点才面试完，这会儿刚回到实验室，把一些东西写下来，免得自己忘记 流程浦发银行的流程主要是综面–&gt;在线编程–&gt;技术面，因为人数不同，所以有些人的面试流程不一样，不过都是三个环节都是必须要走完的。 在线编程我先进行的是在线编程，三道题，总共五十分钟，时间特别紧，主要是浦发银行用的那个系统特别坑，光熟悉人家的答题系统就花了十分钟，支持本地IDE，但是是Dev C++,平时用的也不多三道题，分别是：第一道题，判断一个数是不是素数，很简单，最暴力的方法从2~N，一个一个数的就那么试就可以了。第二道题，输出1900~2000之间所有的闰年，也很简单，暴力方法就可以，能被4整除且不能被100整除，或者能被400整除，也很简单。第三道题，密码解密的，说白了就是字符变换，A–&gt;Z，B–&gt;Y,C–&gt;X,…a–&gt;z,b–&gt;y,c–&gt;x，…只有字母才变，其他字符不变化，如果是第i个字母，那么就变成第26-i+1个字母这些题目都很简单，但就是时间不够，对人家的系统不太熟悉，前面浪费了很多时间，所以最后一题写出来，但是没时间调试了 技术面试总共三个面试官，面对面就这么问你。这个技术面试真的可怕，就问了一点点专业知识，其他都是真的扯淡，待我详细说来第一个问题，为啥你这个照片看起来比你本人白很多？我说人家给我P成那个样子了，不是我故意的。。。第二个问题,看了我的简历，你那个机器人比赛有什么意义，然后我就说了比赛的背景第三个问题，我看你本科是那里那里，是不是保研？之类的高潮来了，我之前参加了华为的比赛，然后拿了名次，就问我华为比赛，突然画风一转，我们昨天也面试了一个，叫什么什么，然后我说那是我队长，然后就开始问，你和队长相比，你有什么优势？你队长的开发能力怎么样？我当时的心里想的是，我靠！！！这是要干么？然后我把队长一通夸，当然，这个时候你就要说自己在一些小地方不如他，这些地方看起来是缺点，但是实际上从另一个角度讲是优点的那种。然后又问我实验室另一个小伙伴开发能力怎么样，然后又是这么回答的，然后现在开始把我们三个拉到一块开始比，你们三个成绩呢？你们三个的开发能力?我。。。问完这个，开始问我写的简历上说是熟悉Linux操作系统，所以问我shell命令，第一个我忘记了，第二个是查看进程状态，第三个是查看CPU利用率；下面是我们的对话：123456789101112131415最左边的面试官：你还有个哥是吧？ 我：嗯 最左边的面试官：这个工作单位是上海王品牛排，这是个品牌么？全国连锁？ 我：对啊，可有名了，满大街的广告 最左边的面试官：我怎么没听说过。 中间的面试官：嗯，是有这个一个牌子，还挺贵 我：。。。。 中间的面试官：你哥这个是职业么？ 我：嗯 中间面试官: 你哥专业学的就是西餐？ 我：嗯 中间面试官：学的就是西餐？我：嗯，还是在咱陕西学的 中间面试官： 啥学校？ 我： 陕西旅游烹饪学院 对话终于结束了，可以换个话题了，太可怕了。差不多就这些了 综合面试这一轮也是三个面试官，然后六个人一组，也是这么面对面交流。综合面试主要是两个场景，第一个是给你一段话，然后给你两分钟，你可以根据材料的内容，来一段演讲，限时三分钟，我的题目是关于中国人的山寨货，模仿是一种学习，你的看法？两分钟后，面试官说可以开始了，因为没有人立即举手，所以我就举手了，大概随便说了一些，提出自己的观点就差不多了，然后大家开始轮流发言，基本大家都会有发言的机会，但是我觉得这个环节，主要是你的发言要有调理，观点重复不重要，但是条理一定要清楚。第二个环节是面试官根据你的演讲，进行提问，其实也没问什么，主要是中间的面试官提问，听说话语气像是个领导之类的下面是一些记得对话123456789101112131415161718192021面试官：5号同学，你为啥没有项目经历5号同学：因为我之前是学经济的，后来跨专业考到计算机，所以没有面试官：4号同学，我看你写了很多计算机能力，你的这些计算机能力在你的实际项目中时怎么用的？4号同学：首先，我的比赛要求我在一分钟内程序跑完，但是我第一个版本的程序跑完需要15分钟，我的算法肯定不能变， 那么我就需要优化数据结构，让他的运行时间变短，还有如此种种面试官:那你这些比赛的代码量？4号同学：大概500行，其他的比赛很长面试官：3号同学，你总结下自己的特长3号同学：我的学习能力特别强，团结同学之类的(这不是原话，大概意思是这样)面试官：6号同学，你总结下自己的特长6号同学：~~~~（内容和3号差不多）面试官：7号同学，你的经历为啥断了一层？7号同学：我之前本科毕业工作了四年去读研，其中有段工作时间太短，所以我没写，出现了断层面试官：你主要做过什么项目？7号同学：我印象最深的一次是，XXXXX面试官：主要用的是什么语言？7号同学：Java面试官：1号同学，你说下你的项目经历1号同学：XXX是我的实验室的项目，XXXX是我的业余爱好，我用的XX模型，主要是Java语言写的面试官：3号同学，你的项目经历3号同学：我主要是学习XXXX，我到目前为止，写了XXXX专利，还有一篇文章在写 差不多就问了这么多，然后我们这组综合面试就结束了，感觉这些人不是很在乎你的技术有多厉害，第一是你的表达能力，还有就是面试官很不专业，不是科班出身，所以这个时候有项目的可以随便吹就可以了。不知道面试结果咋样，反正就这样了。加油~]]></content>
      <categories>
        <category>面经</category>
      </categories>
      <tags>
        <tag>面经</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[小Q的歌单]]></title>
    <url>%2F2018%2F07%2F31%2F%E5%B0%8FQ%E7%9A%84%E6%AD%8C%E5%8D%95%2F</url>
    <content type="text"><![CDATA[问题描述–2018年腾讯秋招笔试真题小Q有X首长度为A的不同的歌和Y首长度为B的不同的歌，现在小Q想用这些歌组成一个总长度正好为K的歌单，每首歌最多只能在歌单中出现一次，在不考虑歌单内歌曲的先后顺序的情况下，请问有多少种组成歌单的方法。 输入描述每个输入包含一个测试用例。每个测试用例的第一行包含一个整数，表示歌单的总长度K（1&lt;=K&lt;=1000）。接下来的一行包含四个正整数，分别表示歌的第一种长度，A（A&lt;=10)和数量X（X&lt;=100）以及歌的第二种长度B（B&lt;=10）和数量Y（Y&lt;=100）。保证A不等于B。 输出描述输出一个整数，表示组成歌单的方法取模。因为答案可能会很大，输出对1000000007取模的结果。 输入示例125 2 3 3 3 输出示例19 结题思路假设a首A长度的歌曲和b首B长度的歌曲组成歌单，那么应该满足下列方程123a*A+b*B=K a&lt;=X; b&lt;=Y; 那么，只需要对a和b进行排列组合就可以，输出只需要对这个结果取模即可。 代码1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253#include&lt;iostream&gt;#include&lt;cmath&gt;using namespace std;long C(int m,int n)&#123; long res=0; if(0==m || 0==n)&#123; return 1; &#125; if(1==m)&#123; return n; &#125; long x=1; long y=n; for(int i=1,j=n;i&lt;=m;i++,j--)&#123; x=x*i; y=y*j; &#125; return y/x;&#125; int main()&#123; const int mod=1000000007; int k; cin&gt;&gt;k; int A,B,X,Y; cin&gt;&gt;A; cin&gt;&gt;X; cin&gt;&gt;B; cin&gt;&gt;Y; long res=0; long temp; for(int i=0;i&lt;X;i++)&#123; for(int j=0;j&lt;Y;j++)&#123; temp=i*A+j*B; if(temp==k)&#123; res+=C(i,X)*C(j,Y); &#125; else if(temp&gt;k)&#123; break; &#125; &#125; temp=i*A; if(temp&gt;k)&#123; break; &#125; &#125; cout&lt;&lt; res%mod&lt;&lt;endl; return 0;&#125; 这是我的代码，因为我是事后写的，不一定能通过所有的测试用例，欢迎大家指出错误，写完博客，放松下]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[雪中悍刀行]]></title>
    <url>%2F2018%2F07%2F29%2F%E9%9B%AA%E4%B8%AD%E6%82%8D%E5%88%80%E8%A1%8C%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;不记得花了多长时间，终于把雪中悍刀行看完了，不得不说，这是我近几年看的，少有的武侠佳作，以前看书，各种没营养的垃圾小说，现在说实话，越看眼光越高，这部小说，不得不说，圆了作者的江湖梦，也圆了我们这些读者的少年江湖梦。这部小说给我很多感动，也羡慕书中的风流人物，觉得中国的古文是真的美，看完了，随便写点东西。&emsp;&emsp;春秋兴亡，风雨飘摇，霸业宏图，说与山鬼听木剑走江湖，义薄胜关公，折剑听雨落，江湖秋水阔两袖青蛇走，一剑开天门，甲子念绿袍，白发复狂歌白鹤下江南，三世为红颜，长誓破天门，红衣承一诺八国春秋崩，三甲天下敌，天地覆手间，人仙如提偶八百年如昨，丽珠含恨锁，真武两世魂，不悔三生恋大庚角誓杀，菜圃绿意遮，故国尘归土，白头与厮磨紫雷一夜雪，裙结解又结，峨眉多摧折，紫衣令江湖白衣诵般若，菩萨低垂眉，金刚伏魔怒，一禅在我心一杆梅子酒，绿紫雷光起，知报寸心间，懒与人辩说马踏六国崩，铁甲江湖折，佳人素衣剑，铁衣裹枯骨长衿撼青壑，指荡旧星罗，雨中高歌死，霸王落子安扣指问长生，三千红丝绕，佛魔蒙昧忘，世上已百年胭脂东西寻，舍利南北笑，风雨飘摇过，朱钗慰我心腴润幽香麝，剑冷情尚灼，无处觅佳人，念凉在我心双兔傍地走，雌雄莫需辨，正道在我心，兔死走狗烹黄庭洗凡浊，起手撼山阿，绿蚁慢饮酌，沧海化峭壑 &emsp;&emsp;哈哈哈，就写这么多。]]></content>
      <categories>
        <category>静乐志</category>
      </categories>
      <tags>
        <tag>静乐志</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo-next博客中mathjax显示问题解决]]></title>
    <url>%2F2018%2F07%2F23%2Fhexo-next%E5%8D%9A%E5%AE%A2%E4%B8%ADmathjax%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%2F</url>
    <content type="text"><![CDATA[问题描述&emsp;&emsp;在markdownPad2中用mathjax插入公式时，在线显示不了 解决方法&emsp;&emsp;第一步，在markdownPad中Tools-&gt;options-&gt;markdown-&gt;markdown processor选择GitHub flavored markdown(offline)&emsp;&emsp;第二步，在hexo中安装mathjax工具，执行以下命令就可以了12npm install hexo-math --savehexo math install &emsp;&emsp;第三步，此时，你去插入公式，还是显示不对，因为在mathjax中，‘\’默认为转义字符，所以我们需要修改文件，去掉转义字符，方法如下：在./node_modules/marked/lib/文件下，用记事本打开mathjax.js文件，修改其中两个地方：第一个地方：1escape: /^\\([\\`*&#123;&#125;\[\]()# +\-.!_&gt;])/, 修改为1escape: /^\\([`*\[\]()# +\-.!_&gt;])/, 第二个地方：1em: /^\b_((?:[^_]|__)+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/, 修改为1em:/^\*((?:\*\*|[\s\S])+?)\*(?!\*)/, 第四步，在主题配置文件_config.yml设置如下代码：1234mathjax: enable: true per_page: false cdn: //cdn.bootcss.com/mathjax/2.7.1/latest.js?config=TeX-AMS-MML_HTMLorMML 这样，所有的步骤就都完成了，快去试试吧 参考文献搭建一个支持LaTEX的hexo博客在Hexo中渲染MathJax数学公式写完了一篇博客，来张图放松一下]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解决图片在hexo-next博客下markdownpad2本地不显示问题]]></title>
    <url>%2F2018%2F07%2F23%2F%E8%A7%A3%E5%86%B3%E5%9B%BE%E7%89%87%E5%9C%A8hexo-next%E5%8D%9A%E5%AE%A2%E4%B8%8Bmarkdownpad2%E6%9C%AC%E5%9C%B0%E4%B8%8D%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[问题描述&emsp;&emsp;前段时间刚开完玩博客，但是有个很大的问题就是本地图片在网上显示不了，总是会挂掉，很难受，就搞啊搞，总算是解决了。&emsp;&emsp;解决办法就是既然本地图片在hexo-next博客上回挂掉，那么久不放在本地了，而且放在本地的话，图片多了，生成静态文件的时候会非常慢，亲测，我就放了一张图片，就明显能感觉到变慢了，所以放到本地很不靠谱，那就是放在晚上喽，晚上选择性很多，但是要考虑到稳定性，我们现在这么折腾在GitHub上搭建个博客，各种个性化主题，我可不想我的图片三个月后莫名因为图床不服务了，我的博客上的图片也挂掉，那我会想弄死那些人，所以，以稳定优先考虑的按照我的方法来，如果你不想要稳定，或者只是玩玩，那么请出门右拐，随便选个图床。&emsp;&emsp;我选的是华为云对象存储作为我的图床，其实还有七牛云和阿里云都可以做，七牛云大家都推荐，但是实名认证贼麻烦，所以最后再阿里云和华为云之间选了华为云，这两个都差不多，而且流量包价格也一样的，所以朋友们不要问我那个好，都一样的，下面我以华为云为例，说下大概的过程： 具体步骤&emsp;&emsp;第一步，肯定是注册账号如下图：&emsp;&emsp;第二步，注册号之后，登录，然后实名认证，很快的，基本上照片上传之后三秒钟认证通过，相比七牛云的一天半，而且还要求我的照片清晰来说，真的超级快，这就是我选择华为云的原因。这部分比较简单，我就不上图了。&emsp;&emsp;第三步，点击下图中的控制台&emsp;&emsp;第四步，点击下图中的对象存储服务 &emsp;&emsp;第五步，点击下图中的创建桶，因为我已经创建过了，所以我的那个地方有条目，你们的应该是空的&emsp;&emsp;第六步，创建的详情下图所示：&emsp;&emsp;第七步，创建桶之后，点击返回桶列表，创建好的桶如下所示，演示如何上传文件&emsp;&emsp;第八步，如图所示，上传文件；&emsp;&emsp;第九步，如图所示，查看图片详情&emsp;&emsp;第十步，获得图片外链；&emsp;&emsp;第十一步，获得图片下载链接&emsp;&emsp;第十二步，购买流量包&emsp;&emsp;第十二步，如下图所示，选中，付钱就是了 总结&emsp;&emsp;以上就是所有的步骤，希望对大家有帮助。]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[可乐复制问题]]></title>
    <url>%2F2018%2F07%2F23%2F%E5%8F%AF%E4%B9%90%E5%A4%8D%E5%88%B6%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[问题描述&emsp;&emsp;自动售货机里有N瓶复制可乐.复制可乐非常神奇，喝了它的人会复制出一个自己来！&emsp;&emsp;现在有Alice,Bob,Cathy,Dave四个人在排队买复制可乐。买完的人会马上喝掉，然后他和他的副本会重新去队伍的最后面排队买可乐。&emsp;&emsp;问：最后一个买到复制可乐的人叫什么名字？ 输入描述输入仅有一行，包含一个正整数N； #输出描述输出喝到最后一罐复制可乐的人的名字 示例输入8 输出Bob 问题分析&emsp;&emsp;我们以1,2,3,4分别代表四个名字，那么他们的排列分别是： 序列 序列长度 单个数字重复次数 1 2 3 4 4 1 1 1 2 2 3 3 4 4 8 2 1 1 1 1 2 2 2 2 3 3 3 3 4 4 4 4 16 3 我们可以看出，归纳总结可以知道，第i轮之后，第i轮的序列长度为\(4*2^{i-1}\)第i轮的每个数字重复频率为\(2^{i-1}\)思路是，我们首先要确定输入的数字N在第i轮的范围内，然后再根据在这一轮每个数字的重复频率来确定最后N输入那个数字，也就是最后哪个人处于最后 代码1234567891011121314151617181920212223242526272829303132333435363738394041#include&lt;iostream&gt;#include&lt;cmath&gt;int main()&#123; using namespace std; long n; cin &gt;&gt; n; if (n &lt;= 4) &#123; if (1 == n) cout &lt;&lt; "Alice" &lt;&lt; endl; else if (2 == n) cout &lt;&lt; "Bob" &lt;&lt; endl; else if (3 == n) cout &lt;&lt; "Cathy" &lt;&lt; endl; else if (4 == n) cout &lt;&lt; "Dave" &lt;&lt; endl; return 0; &#125; long num=0; long i = 1; for (; i &lt; n; i++) &#123; if (n &gt; (num + 4 * pow(2, i - 1))) num += 4 * pow(2, i - 1); else break; &#125; if (n-num&lt;=pow(2,i-1)) cout &lt;&lt; "Alice" &lt;&lt; endl; else if (n - num&lt;=2*pow(2, i - 1)) cout &lt;&lt; "Bob" &lt;&lt; endl; else if (n - num&lt;=3*pow(2, i - 1)) cout &lt;&lt; "Cathy" &lt;&lt; endl; else if(n-num&lt;=4*pow(2,i-1)) cout &lt;&lt; "Dave" &lt;&lt; endl; return 0;&#125; 总结本来这个题还有一种最笨的解法，就是直接建立一个长度为N的数组，然后把数字一个一个填进去，然后判断最后是第几个人，但是这种方法，当N很大的时候，会占用很多内存，所以放弃了。]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo-next博客添加评论功能]]></title>
    <url>%2F2018%2F07%2F20%2Fhexo-next%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD%2F</url>
    <content type="text"><![CDATA[添加博客功能&emsp;&emsp;今天我又更新了，本来想加载gitalk博客评论的，结果加载的过程中出错，在解决问题的过程中，发现了一个更好的，这就是极简的valine，这个真的是美爆了，果断放弃gitalk，换成valine，下面是我的添加过程，希望对大家有帮助。&emsp;&emsp;我参考了下面的这篇博客，大家照着来就行了。为什么我不再写一篇呢？因为我的图片上传功能还没修好，贼难受，就先这样记录，等我下午中期答辩结束再去找问题。]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo-next博客添加在线联系功能]]></title>
    <url>%2F2018%2F07%2F18%2Fhexo-next%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E5%9C%A8%E7%BA%BF%E8%81%94%E7%B3%BB%E5%8A%9F%E8%83%BD%2F</url>
    <content type="text"><![CDATA[&emsp;&emsp;前面按照别人的方法，看到添加在线联系功能都需要收钱，这两天又开始折腾博客，发现了一个免费的，大家可以看着试试，具体的方法别人的博客说的很清楚，我就不赘述了，参考这位大佬的博客就行了&emsp;&emsp;明天开始要去忙中期了，今天折腾博客，发现了很多没解决的问题，先列出来，以后慢慢解决。 已经解决的问题：这次无意中解决了文章下面版权信息显示不出来的问题，解决的思路很简单，在主题配置文件中，修改如下代码：1234post_copyright: enable: true license: CC BY-NC-SA 3.0 license_url: https://creativecommons.org/licenses/by-nc-sa/3.0/ 待解决的问题：1、本地图片加载不出来；2、图片放大之后按照fancybox显示；3、gitalk评论功能不能初始化，也不能登录。]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[观看“我不是药神”有感]]></title>
    <url>%2F2018%2F07%2F17%2F%E8%A7%82%E7%9C%8B%E2%80%9C%E6%88%91%E4%B8%8D%E6%98%AF%E8%8D%AF%E7%A5%9E%E2%80%9D%E6%9C%89%E6%84%9F%2F</url>
    <content type="text"><![CDATA[我不是药神&emsp;&emsp;上周末终于得空，去看“我不是药神”，感慨良多。&emsp;&emsp;我们生活在这个社会，有些人说好，有些人说这个社会不好，各有各的理由，就像那些白血病人，或许对他们来说，这个社会真的不怎么好，然而对于我们这些健康人，像我这样，还能去看个电影，在博客上感慨的人，生活确实很幸福吧，我想这点是不可辩驳的。&emsp;&emsp;站在痛苦之外，再去看那些痛苦，更多的都是无病呻吟，但有些话还是要说的。陈勇，也就是主人公，很平凡的一个人，买保健品的，妻子离异，儿子要被要走，父亲瘫痪在床，还经常打媳妇，说实话，这种人（或许我不应该给人打上标签）在现实生活中，我是绝对看不起的，但是却做出了故事中的壮举。或许一开始，只是为了私利，为了自己平安，把药品渠道买个那个无良奸商，结果呢，好友惨死，或许他是该为这件事负责的，也或许不该，凭什么要为了别人的生死，搭上自己的生活。做出那样的决定，无可厚非，表示理解，换做我来，估计也是一样的。&emsp;&emsp;后来，好友惨死，再去看那些白血病人，我想，每一个内心有良知的人，都会知道该怎么做。&emsp;&emsp;结果便是：犯法，被抓。&emsp;&emsp;我们再一次开始思考，是法大于情，还是情大于法，或许我们的文化中，更加倾向于后者，毕竟我们的两千年封建社会是人治，孔老夫子说的以人治国，但是，今天，这个法治的社会，法大于情，谁对谁错，说不清，我们今天说情大于法，会不会明天也有人这么做，故意犯法呢，没有绝对完美的制度。&emsp;&emsp;再回过头，那种药，那么贵，为什么没有纳入医保体系，我们的政府人员在做什么？不作为，很多官员的不作为，在我求职的今天，提起政府部门，大家更多的想到的是安逸，养老，这样的字眼，真的适合我们的政府么？回头再说陈勇，在法庭上的那一番话，真的很到位，改变了我对他的看法，很有担当。&emsp;&emsp;我虽然犯了法，我认罪，该怎么判我都认，但是这件事我不后悔，如果再来一次，我依旧这样做。这就是担当。&emsp;&emsp;加油~]]></content>
      <categories>
        <category>静乐志</category>
      </categories>
      <tags>
        <tag>静乐志</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[GitHub上搭建自己的hexo+next博客]]></title>
    <url>%2F2018%2F07%2F11%2FGitHub%E4%B8%8A%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84hexo-next%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[半年前开始玩博客，当时是在博客园上写的，说真的，体验还挺好，但是，界面不怎么友好，找了半天都没找到自己喜欢的主题，所以当时很郁闷的，也就忍了，后来搜学习的东西，看到了GitHub上别人的博客，那种简约风格正是自己喜欢的，当时完全懵逼，都不知道别人怎么弄得，后来就在百度上找，慢慢入坑，最近才找到时间自己搭一个，算是个开端。说实话，博客，就是码农装逼的起点。让我们开始在装逼的道路上飞起吧。 怎么开始 我是完全从零开始的，按照别人博客一步一步来的，现在将我的坑以及参考的博文告诉大家，可以少走很多弯路 安装Git和node.js 这个步骤可以参考这篇博文，按照步骤往下做，这篇博文有个错误的地方，我在我的博客园博文里面指出来了，可以参考一下 安装hexo和next主题 这个步骤依旧可以参考上面的博文 next的主题优化 主题的优化，我参考了博文，这篇博文中我参考了设置主菜单的部分，其他的基本步骤没错，这篇博文基本就是next主题设置的牛逼版本了，基本网上能找到的设置在这都有了，我设置的都是好的，如果你的存在问题，仔细看下这篇博文的步骤，版本不大变的话，应该没问题，关于设置打赏功能，可以参考这篇博文可以说是很难得了，连怎么申请二维码都有了。 注意事项 1、国内的域名购买之后，记得一定要实名制，否则解析无效 2、域名解析之后，会有个解析时间，也就是在填解析域名的时候的TTL，修改解析之后，需要等待一段时间，解析才可以生效。]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
</search>
